InspectorController = {};
InspectorController.hideDOMNodeHighlight = function() {};
InspectorController.highlightDOMNode = function(node) {};
InspectorController.loaded = function() {};
InspectorController.windowUnloading = function() {};
InspectorController.attach = function() {};
InspectorController.detach = function() {};
InspectorController.closeWindow = function() {};
InspectorController.clearMessages = function() {};
InspectorController.toggleNodeSearch = function() {};
InspectorController.isWindowVisible = function() {return true;};
InspectorController.searchingForNode = function() {};
InspectorController.addResourceSourceToFrame = function(identifier, frame) {};
InspectorController.addSourceToFrame = function(mimeType, sourceValue, frame) {};
InspectorController.getResourceDocumentNode = function(identifier) {};
InspectorController.search = function(node, query) {};
InspectorController.databaseTableNames = function(database) {};
InspectorController.setting = function(key) {};
InspectorController.setSetting = function(key, value) {};
InspectorController.inspectedWindow = function() { return window;};
InspectorController.localizedStringsURL = function() {return "../English.lproj/localizedStrings.js";};
InspectorController.hiddenPanels = function() {return "elements,resources,profiles,databases";};
InspectorController.platform = function() {return "mock-wi";};
InspectorController.moveByUnrestricted = function(x, y) {};
InspectorController.setAttachedWindowHeight = function(height) {};
InspectorController.wrapCallback = function(callback) {return callback;};
InspectorController.resourceTrackingEnabled = function() {};
InspectorController.enableResourceTracking = function(always) {};
InspectorController.disableResourceTracking = function(always) {};
InspectorController.storeLastActivePanel = function(panelName) {};
InspectorController.enableDebuggerFromFrontend = function(always) {};
InspectorController.disableDebugger = function(always) {};
InspectorController.pauseInDebugger = function() {};
InspectorController.resumeDebugger = function() {};
InspectorController.stepOverStatementInDebugger = function() {};
InspectorController.stepIntoStatementInDebugger = function() {};
InspectorController.stepOutOfFunctionInDebugger = function() {};
InspectorController.debuggerEnabled = function() { return true;};
InspectorController.pauseOnExceptions = function() { return true;};
InspectorController.profilerEnabled = function() {};
InspectorController.startProfiling = function() {};
InspectorController.stopProfiling = function() {};
InspectorController.enableProfiler = function(always) {};
InspectorController.disableProfiler = function(always) {};
InspectorController.currentCallFrame = function() {};
InspectorController.setPauseOnExceptions = function(pauseOnExceptions) {};
InspectorController.addBreakpoint = function(sourceID, lineNumber) {};
InspectorController.removeBreakpoint = function(sourceID, lineNumber) {};
InspectorController.profiles = function() {};
